# Copyright 2014-2015 Project Vogue. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

component("base") {
  output_name = "elang_base"
  sources = [
    "as_printable.cc",
    "as_printable.h",
    "atomic_string.cc",
    "atomic_string.h",
    "atomic_string_factory.cc",
    "atomic_string_factory.h",
    "castable.h",
    "double_linked.h",
    "float_types.h",
    "index_sequence.h",
    "iterator_on_iterator.h",
    "maybe.h",
    "ordered_list.h",
    "simple_directed_graph.h",
    "temporary_change_value.h",
    "visitable.h",
    "zone.cc",
    "zone.h",
    "zone_allocated.h",
    "zone_allocated.cc",
    "zone_allocator.h",
    "zone_owner.h",
    "zone_owner.cc",
    "zone_unordered_map.h",
    "zone_unordered_set.h",
    "zone_user.cc",
    "zone_user.h",
    "zone_vector.h",
  ]

  defines = [ "ELANG_BASE_IMPLEMENTATION" ]

  public_deps = [
    "//base"
  ]

  if (is_win) {
    sources += [ "logging_win.h" ]
  }
}

source_set("base_unittests") {
  testonly = true
  sources = [
    "as_printable_unittest.cc",
    "atomic_string_unittest.cc",
    "castable_unittest.cc",
    "double_linked_unittest.cc",
    "iterator_on_iterator_unittest.cc",
    "ordered_list_unittest.cc",
    "simple_directed_graph_unittest.cc",
    "temporary_change_value_unittest.cc",
  ]

  public_deps = [
    "//testing/gtest",
    ":base",
  ]
}

test("elang_base_unittests") {
  deps = [
    "//base/test:run_all_unittests",
    ":base_unittests",
  ]
}
