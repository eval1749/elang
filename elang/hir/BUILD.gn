# Copyright 2014-2015 Project Vogue. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//testing/test.gni")

component("hir") {
  output_name = "elang_hir"
  sources = [
    "analysis/dominator_tree.cc",
    "analysis/dominator_tree.h",
    "analysis/dominator_tree_builder.cc",
    "analysis/dominator_tree_builder.h",
    "analysis/graph.cc",
    "analysis/graph.h",
    "editor.cc",
    "editor.h",
    "error_code.h",
    "error_data.cc",
    "error_data.h",
    "error_reporter.cc",
    "error_reporter.h",
    "factory.cc",
    "factory.h",
    "factory_config.h",
    "factory_user.cc",
    "factory_user.h",
    "formatters/text_formatter.cc",
    "formatters/text_formatter.h",
    "hir_export.h",
    "instruction_factory.cc",
    "instruction_factory.h",
    "instruction_visitor.cc",
    "instruction_visitor.h",
    "instructions.cc",
    "instructions.h",
    "intrinsic_names.cc",
    "intrinsic_names.h",
    "thing.h",
    "type_factory.cc",
    "type_factory.h",
    "type_factory_user.cc",
    "type_factory_user.h",
    "type_visitor.cc",
    "type_visitor.h",
    "types.cc",
    "types.h",
    "validator.cc",
    "validator.h",
    "value_visitor.cc",
    "value_visitor.h",
    "values.cc",
    "values.h",
    "values_forward.h",
  ]

  defines = [ "HIR_IMPLEMENTATION" ]

  deps = [
    "//base",
    "//elang/base",
  ]
}

source_set("hir_test") {
  testonly = true
  sources = [
    "testing/hir_test.cc",
    "testing/hir_test.h",
  ]
  public_deps = [
    ":hir",
    "//testing/gtest",
  ]
}

source_set("hir_tests") {
  testonly = true
  sources = [
    "analysis/dominator_tree_unittest.cc",
    "analysis/graph_unittest.cc",
    "editor_unittest.cc",
    "instructions_unittest.cc",
    "types_unittest.cc",
    "values_unittest.cc",
  ]
  public_deps = [
    "//testing/gtest",
    ":hir_test",
  ]
}

test("elang_hir_tests") {
  deps = [
    "//base/test:run_all_unittests",
    ":hir_tests",
  ]
}
